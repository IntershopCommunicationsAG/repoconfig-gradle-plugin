= Repository Configuration Init Script Plugin
:latestRevision: 1.1.0
:toc:

== Summary
This is an init script plugin to provide special repository settings for project teams or companies.
See https://docs.gradle.org/current/userguide/init_scripts.html and http://gradle.org/standardizing-enterprise-builds-with-gradle/.
With this plugin it is also possible to inject repository configurations easily in a settings.gradle file.
See https://docs.gradle.org/current/userguide/init_scripts.html[Initialization Scripts].

== Usage
To apply this plugin to your configuration, add the following lines to your **init** script:

.init.gradle
[source,groovy,subs="attributes"]
----
initscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.intershop.gradle.repoconfig:repoconfig-gradle-init-plugin:{latestRevision}'
    }
}

apply plugin: com.intershop.gradle.repoconfig.RepoConfigPlugin

repositoryConfiguration {

    releaseRepo = 'https://repository.host.com/repo/content/group/releasesAll'
    snapshotRepo = 'https://repository.host.com/repo/content/group/snapshotsAll'
    repoHostList = ['repository.host.com', 'repository.host.de']
    corporateName = 'project or company name'

}

----

This plugin applies the following configurations and properties to all projects with the same init.gradle script.
Furthermore it adds one method to the Gradle object.

.Ivy configuration
These Ivy patterns will be applied to all configured Ivy repositories  - read, build script and publishing configurations.
These patterns will be also stored in Gradle and project properties.

* Ivy pattern +
pattern: `'[organisation]/[module]/[revision]/[type]s/ivy-[revision].xml'` +
property: `corporateIvyPattern`
* Artifact pattern +
pattern: `'[organisation]/[module]/[revision]/[ext]s/[artifact]-[type](-[classifier])-[revision].[ext]'` +
property: `corporateArtifactPattern`
* Artifact pattern for ivy files +
pattern: `'[organisation]/[module]/[revision]/[type]s/ivy-[revision].xml'` +
property: `corporateIvyAsArtifactPattern`

.Extension for Gradle object with method `injectRepositories`
This method can be used to add repositories to existing repository containers.

.settings.gradle (example)
[source,groovy,subs="attributes"]
----
buildscript {
    gradle.injectRepositories(repositories, configurations)
    dependencies {
        classpath 'com.intershop:deployment-bootstrap:2.7.0'
    }
}

apply plugin: com.intershop.deploy.bootstrap.DeploymentBootstrapPlugin

deploymentBootstrap {
    gradle.injectRepositories(repositoryHandler, configurationContainer)

    assembly (installAssembly) {

    ...
----

== Init Script Extension 'repositoryConfiguration'
=== Properties

[cols="17%,17%,17%,17%,32%", width="95%", options="header"]
|===
|Property | Type | Default value | Values | Description

|*`releaseRepo`*   |`String`  | `null` |  | repository URL of a repository group with releases for read access
|*`snapshotRepo`*  |`String`  | `null` |  | repository URL of a repository group with snapshots for read access
|*`repoHostList`*  |`[String]`| `null` |  | list of allowed repository hosts. Repositories with other host names in build scripts will be dropped
|*`corporateName`* |`String`  | `null` |  | this property is used in information output
|*`pulicMavenRepo`* |`String`  | `null` |  | repository URL of a repository or repository group with Maven artifacts. This can be used for a public Maven repository. The host of this repository is added to the list of allowed hosts automatically.
|*`activateJCenter`* |`boolean`  | `false` |  | If this value is true, JCenter will be added to the list of repsoitories. The host of this repository is added to the list of allowed hosts automatically.

|===

== Gradle Extension
=== Methods
[cols="20%,15%,65%", width="95%", options="header"]
|===
|Method | Parameters | Description
|*injectRepositories* | RepositoryHandler, ConfigurationContainer | See https://docs.gradle.org/current/javadoc/org/gradle/api/artifacts/dsl/RepositoryHandler.html[RepositoryHandler] and
https://docs.gradle.org/current/javadoc/org/gradle/api/artifacts/ConfigurationContainer.html[ConfigurationContainer] in Gradle standard documentation.
|===

=== Additional Environment or System Variables
For local publishing it is necessary to configure a local repository. Therefore it is necessary to specify a path.

[cols="30%,30%,40%", width="60%", options="header"]
|===
|System Variable| Java System Variable| Default Value

|`LOCAL_REPO_PATH`|`localRepoPath`|`${GRADLE_USER_HOME}/.localRepo`
|===

If repositories are secured with username and password, it is necessary to specify these credentials.

[cols="30%,30%,40%", width="60%", options="header"]
|===
|System Variable| Java System Variable| Default Value

|`REPO_USER_NAME`|`repoUserName`|''
|`REPO_USER_PASSWD`|`repoUserPasswd`|''
|===
For special use cases it is necessary to enable or disable special sets of repositories or special repository configurations.

[cols="25%,25%,10%,40%", width="90%", options="header"]
|===
| System Variable | Java System Variable | Default Value | Description

|`DISABLE_INITDEFAULTS`|`disableInitDefaults`|`false`|If true, all default settings are disabled.
|`ENABLE_SNAPSHOTS`    |`enableSnapshots`    |`false`|If true, snapshot repositories (`ivy.snapshots.pathList`, `maven.snapshots.pathList`) will be enabled for build dependencies.
|`DISABLE_REPOS`       |`disableRepos`       |`false`|If true, repositories from `ivy.repository.pathList` and `maven.repository.pathList` will be disabled for build dependencies.
|`ENABLE_BUILDSCRIPT_SNAPSHOTS` |`enableBuildscriptSnapshots` |`false`|If true, snapshot repositories (`ivy.snapshots.pathList`, `maven.snapshots.pathList`) will be enabled for buildscript dependencies.
|`DISABLE_BUILDSCRIPT_REPOS`    |`disableBuildscriptRepos`    |`false`|If true, repositories from `ivy.repository.pathList` and `maven.repository.pathList` will be disabled for buildscript dependencies.
|`DISABLE_LOCAL_REPO`  |`disableLocalRepo`   |`false`|If true, default configuration for local repository is disabled.
|`DISABLE_IVYPATTERN_PUBLISH`   |`disableIvyPatternPublish`   |`false`|If true, the default ivy pattern will be disabled for all publish configurations.
|`DISABLE_IVYPATTERN_BUILDSCRIPT`   |`disableIvyPatternBuildscript`   |`false`|If true, the default ivy pattern will be disabled for all buildscript configurations.
|`DISABLE_IVYPATTERN`  |`disableIvyPattern`  |`false`|If true, the default ivy pattern will be disabled for all build configurations.
|===

=== Additional Project Properties
For special use cases it is necessary to enable or disable special configurations.

[cols="15%,85%", width="90%", options="header"]
|===
| Project property | Description

|`useSCMVersionConfig` | If this property exists and the value of this is true, the corporate plugin does not add 'LOCAL' to the version of a local publishing.
|===

== License

Copyright 2014-2016 Intershop Communications.

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
